name: Check TF2 Standard Competitive Image Updates

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
    contents: write
    pull-requests: write

jobs:
  check-update:
    runs-on: ubuntu-latest
    env:
      FILE_PATH: ./variants/standard-competitive/base-image-version.txt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current image digest for linux platform
        id: digest
        run: |
          digest=$(docker manifest inspect ghcr.io/melkortf/tf2-competitive:latest | jq -r '.manifests[] | select(.platform.os == "linux") | .digest')
          echo "digest=$digest" >> $GITHUB_OUTPUT

      - name: Read stored digest
        id: stored
        run: |
          if [ -f "$FILE_PATH" ]; then
            stored_digest=$(cat "$FILE_PATH")
          else
            stored_digest="none"
          fi
          echo "stored_digest=$stored_digest" >> $GITHUB_OUTPUT

      - name: Check for digest change
        id: check
        run: |
          if [ "${{ steps.digest.outputs.digest }}" != "${{ steps.stored.outputs.stored_digest }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update file and create PR
        if: steps.check.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Replace invalid characters in the digest
          sanitized_digest=$(echo "${{ steps.digest.outputs.digest }}" | tr ':' '-')
          branch="update-base-image-version-${sanitized_digest}"

          # Check if branch already exists
          if git ls-remote --exit-code --heads origin $branch; then
            echo "Branch $branch already exists. Skipping PR creation."
            exit 0
          fi

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b $branch
          echo "${{ steps.digest.outputs.digest }}" > "$FILE_PATH"
          git add "$FILE_PATH"
          git commit -m "chore: update standard-competitive base image digest"
          git push origin $branch

          gh pr create --title "chore: update standard-competitive base image digest" \
            --body "New version of melkortf/tf2-competitive available. Click here to see new releases: [TF2 Server Releases](https://github.com/melkortf/tf2-servers/releases)" \
            --head $branch \
            --base main

          # Get the PR number of the newly created PR
          pr_url=$(gh pr view --json url --head $branch -q .url)
          pr_number=$(gh pr view --json number --head $branch -q .number)

          # Enable automerge for the PR
          gh pr merge $pr_number --auto --merge

          # Approve the PR
          gh pr review $pr_number --approve
