name: Main Release

on:
  push:
    branches:
      - main
    paths: 
      - Dockerfile
      - config/**
      - scripts/**
      - src/**
      - db/**
      - package.json
      - package-lock.json
      - .nvmrc
      - .github/workflows/release.yaml
      - vite.config.ts
      - tsconfig.json
  pull_request:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'          

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Save config/default.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: config-file
          path: config/default.json
      
      - name: Save Ban List as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ban-list
          path: db/bans.csv

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name == 'push' }}
          tags: |
            sonikro/tf2-quickserver:latest
            sonikro/tf2-quickserver:${{ github.sha }}
          platforms: |
            linux/amd64
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: quickserver
    concurrency: 
      group: deploy
    needs: build-and-push
    if: github.event_name == 'push'
    steps:
      - name: Download config/default.json artifact
        uses: actions/download-artifact@v4
        with:
          name: config-file
          path: config
      
      - name: Download Ban List artifact
        uses: actions/download-artifact@v4
        with:
          name: ban-list
          path: db

      - name: Copy config/default.json to target directory
        run: |
          cp config/default.json /home/quickserver/tf2-quickserver/config/default.json
      
      - name: Copy Ban List
        run: |
          cp db/bans.csv /home/quickserver/tf2-quickserver/db/bans.csv

      - name: Run update script
        run: |
          cd /home/quickserver/tf2-quickserver
          ./update.sh
